openapi: 3.0.0
info:
  title: Estate API
  version: 1.0.0
paths:
  /estate:
    post:
      summary: Create an estate
      requestBody:
        description: JSON payload to create an estate
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EstateRequest'
      responses:
        '200':
          description: Successfully created an estate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstateResponseSuccess'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /estate/{id}/tree:
    post:
      summary: Add a tree to an estate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: JSON payload to add a tree
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TreeRequest'
      responses:
        '201':
          description: Successfully added a tree
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TreeResponseSuccess'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Estate not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /estate/{id}/stats:
    get:
      summary: Get statistics for an estate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EstateStatsResponse'
        '404':
          description: Estate not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /estate/{id}/drone-plan:
    get:
      summary: Get drone plan for an estate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: max_distance
          in: query
          required: false
          schema:
            type: number
      responses:
        '200':
          description: Successfully retrieved drone plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DronePlanResponseSuccess'
        '404':
          description: Estate not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    EstateRequest:
      type: object
      required:
        - width
        - length
      properties:
        width:
          type: integer
          example: 100
        length:
          type: integer
          example: 200
    EstateResponseSuccess:
      type: object
      properties:
        id:
          type: string
          example: "abc123"
    TreeRequest:
      type: object
      required:
        - x
        - y
        - height
      properties:
        x:
          type: number
          example: 1.0
        y:
          type: number
          example: 2.0
        height:
          type: number
          example: 3.0
    TreeResponseSuccess:
      type: object
      properties:
        id:
          type: string
          example: "tree123"
    EstateStatsResponse:
      type: object
      properties:
        count:
          type: number
          example: 10
        max:
          type: number
          example: 100.0
        min:
          type: number
          example: 10.0
        median:
          type: number
          example: 55.0
    DronePlanResponseSuccess:
      type: object
      properties:
        distance:
          type: number
          example: 50.0
        rest:
          type: object
          properties:
            x:
              type: number
              example: 1.0
            y:
              type: number
              example: 2.0
    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Invalid width or length"
