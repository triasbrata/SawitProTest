// Code generated by MockGen. DO NOT EDIT.
// Source: repository/interfaces.go

// Package repository is a generated GoMock package.
package repository

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRepositoryInterface is a mock of RepositoryInterface interface.
type MockRepositoryInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryInterfaceMockRecorder
}

// MockRepositoryInterfaceMockRecorder is the mock recorder for MockRepositoryInterface.
type MockRepositoryInterfaceMockRecorder struct {
	mock *MockRepositoryInterface
}

// NewMockRepositoryInterface creates a new mock instance.
func NewMockRepositoryInterface(ctrl *gomock.Controller) *MockRepositoryInterface {
	mock := &MockRepositoryInterface{ctrl: ctrl}
	mock.recorder = &MockRepositoryInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepositoryInterface) EXPECT() *MockRepositoryInterfaceMockRecorder {
	return m.recorder
}

// DoCreateEstate mocks base method.
func (m *MockRepositoryInterface) DoCreateEstate(ctx context.Context, input DoCreateEstateRequest) (DoCreateEstateResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DoCreateEstate", ctx, input)
	ret0, _ := ret[0].(DoCreateEstateResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DoCreateEstate indicates an expected call of DoCreateEstate.
func (mr *MockRepositoryInterfaceMockRecorder) DoCreateEstate(ctx, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoCreateEstate", reflect.TypeOf((*MockRepositoryInterface)(nil).DoCreateEstate), ctx, input)
}

// DoCreateTree mocks base method.
func (m *MockRepositoryInterface) DoCreateTree(ctx context.Context, input DoCreateTreeRequest) (DoCreateTreeResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DoCreateTree", ctx, input)
	ret0, _ := ret[0].(DoCreateTreeResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DoCreateTree indicates an expected call of DoCreateTree.
func (mr *MockRepositoryInterfaceMockRecorder) DoCreateTree(ctx, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DoCreateTree", reflect.TypeOf((*MockRepositoryInterface)(nil).DoCreateTree), ctx, input)
}

// GetEstate mocks base method.
func (m *MockRepositoryInterface) GetEstate(ctx context.Context, input GetEstateRequest) (GetEstateResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEstate", ctx, input)
	ret0, _ := ret[0].(GetEstateResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEstate indicates an expected call of GetEstate.
func (mr *MockRepositoryInterfaceMockRecorder) GetEstate(ctx, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEstate", reflect.TypeOf((*MockRepositoryInterface)(nil).GetEstate), ctx, input)
}

// GetEstateTree mocks base method.
func (m *MockRepositoryInterface) GetEstateTree(ctx context.Context, input GetEstateTreeRequest) (GetEstateTreeResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetEstateTree", ctx, input)
	ret0, _ := ret[0].(GetEstateTreeResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetEstateTree indicates an expected call of GetEstateTree.
func (mr *MockRepositoryInterfaceMockRecorder) GetEstateTree(ctx, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetEstateTree", reflect.TypeOf((*MockRepositoryInterface)(nil).GetEstateTree), ctx, input)
}
